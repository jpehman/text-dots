/*
 *@summary JavaScript loading dots utility for the browser
 *@license {@link https://github.com/jpehman/text-dots/blob/master/LICENSE}
 *@author Jonathan Ehman
 *@typedef object
 *@example
 * const textDots = require("text-dots");
 * 
 * const dots = textDots(5);
 * @param {number} numberOfDots - optional - three dots is the default, 0 is pointless and will result in 3 dots
 * @param {object} configObj - optional - allows the dots to start without having to call the start method
 * {
 *   "element": {DOMElement} - required to run textDots without calling start
 *   "text": {string} - optional - defaults to an empty string
 *   "interval": {number} - optional - defaults to 500ms
 * }
 * dots.start(context, "Loading Text", interval);
 * @param {DOMElement} context - required on first run - Passing something other than an HTMLElement will throw a TypeError
 * @param {string} text - optional - dots will be displayed even without a proper string
 * @param {number} interval - optional - defaults to 500ms
 *
 * dots.stop();
 *
 */
var textDots=function(e,t){"use strict"
if(void 0!==e&&isNaN(e))throw new TypeError("The numberOfDots must be a number")
e=("string"==typeof e?parseInt(e,10):e)||3
var n=null,r="object"==typeof t?t.element:null,o=function(){clearInterval(n),n=null},l=function(e){r.innerHTML=e},s=function(t,s,u){if("string"!=typeof s&&"number"!=typeof s&&(s=""),(null===u||isNaN(u))&&(u=500),t&&(r=t),!(r instanceof HTMLElement))throw new TypeError("The context passed in must be an HTMLElement")
o()
for(var i=s,a=0,f=e;f--;)i+="&nbsp;"
n=setInterval(function(){++a>e&&(a=0)
for(var t=i,n=a;n--;)t=t.replace("&nbsp;",".")
l(t)},u),l(i)}
return null!==r&&s(r,t.text,t.interval||null),{start:s,stop:o}}
"undefined"!=typeof module&&module.exports&&(module.exports=textDots)
